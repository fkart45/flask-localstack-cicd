name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask boto3 pytest

    - name: Run unit tests
      run: |
        python -m pytest test_app.py -v

    - name: Start LocalStack
      run: |
        pip install localstack
        docker pull localstack/localstack:1.4.0
        docker run -d -p 4566:4566 -e SERVICES=s3,lambda -e LAMBDA_EXECUTOR=local -e DEBUG=1 localstack/localstack:1.4.0
        sleep 10
        docker ps

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Debug LocalStack Logs
      run: |
        docker logs $(docker ps -q --filter "ancestor=localstack/localstack:1.1.0") || echo "No logs available"

    - name: Wait for LocalStack
      run: sleep 10  # Give LocalStack time to start

    - name: Test Lambda Deployment
      run: |
        aws --endpoint-url=http://localhost:4566 lambda invoke --function-name my_lambda_function out.json
        cat out.json | grep "File uploaded to S3 successfully"

    - name: Deploy and Test Flask App
      run: |
        python app.py &  # Run Flask in background
        sleep 5  # Wait for Flask to start
        curl http://localhost:5001 | grep "Hello, World - I am app build using Flask library! Lambda response: File uploaded to S3 successfully"